#!/bin/bash

set -e

PROJECT=$1
REC_DIR=$2
LIG_DIR=$3
PRIORITY=$4
if [ "x$PROJECT" = "x" -o "x$REC_DIR" = "x" -o "x$LIG_DIR" = "x" ]; then
    echo "Please specify the project id to charge the workflow usage to," 1>&2
    echo "the receptor directory, and the ligand directory. Example:" 1>&2
    echo "  ./submit TG-ABC123 inputs/rec inputs/lig" 1>&2
    echo 1>&2
    echo "A forth optional argument is for priority of the workflow. Example" 1>&2
    echo "  ./submit TG-ABC123 inputs/rec inputs/lig 10000000" 1>&2
    exit 1
fi

TOP_DIR=`pwd` 

# project id sanity check for xd-login
if [ -e /etc/xsede/projects ]; then
    if ! (grep -P "$PROJECT:.*$USER" /etc/xsede/projects) >/dev/null 2>&1; then
        echo "It does not look like you are part of the $PROJECT project!" 1>&2
        exit 1
    fi
fi

if [ "x$PRIORITY" = "x" ]; then
    TS=`date +'%Y%m%d'`
    PRIORITY=$((20200000 - $TS))
fi

REC_DIR=`cd $REC_DIR && pwd`
LIG_DIR=`cd $LIG_DIR && pwd`

# unique directory for this run
RUN_ID=`/bin/date +'%F_%H%M%S'`
RUN_DIR=$HOME/workflows/splinter-$RUN_ID
if [ -e /local-scratch/$USER ]; then
    RUN_DIR=/local-scratch/$USER/workflows/splinter-$RUN_ID
fi
mkdir -p $RUN_DIR
cd $RUN_DIR

echo " ** "
echo " ** Run dir is $RUN_DIR"
echo " ** "

# move to the run dir for dax generation
cp -r $TOP_DIR/* $RUN_DIR/
cd $RUN_DIR/

# generate the dax
export PYTHONPATH=`pegasus-config --python`
./dax-generator.py $RUN_ID $RUN_DIR $REC_DIR $LIG_DIR $PRIORITY

# create the site catalog
cat >sites.xml <<EOF
<?xml version="1.0" encoding="UTF-8"?>
<sitecatalog xmlns="http://pegasus.isi.edu/schema/sitecatalog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pegasus.isi.edu/schema/sitecatalog http://pegasus.isi.edu/schema/sc-4.0.xsd" version="4.0">

    <site handle="local" arch="x86_64">
        <directory type="shared-scratch" path="$RUN_DIR/scratch">
            <file-server operation="all" url="file://$RUN_DIR/scratch"/>
        </directory>
        <directory type="local-storage" path="$RUN_DIR/outputs">
            <file-server operation="all" url="file://$RUN_DIR/outputs"/>
        </directory>
        <profile namespace="condor" key="+ProjectName" >"$PROJECT"</profile>
    </site>

    <site handle="condorpool" arch="x86_64">
        <profile namespace="pegasus" key="style" >condor</profile>
        <profile namespace="condor" key="universe" >vanilla</profile>
        <profile namespace="condor" key="+ProjectName" >"$PROJECT"</profile>
    </site>

</sitecatalog>
EOF

# plan and submit the  workflow
pegasus-plan \
    --conf pegasusrc \
    --dir $RUN_DIR/run \
    --relative-dir $RUN_ID \
    --sites condorpool \
    --output-site local \
    --dax dax-top.xml \
    --submit \
    2>&1 | tee submit.log

RUN_DIR=`grep pegasus-remove submit.log | awk '{print $5}'`
echo "JOB_ID=${RUN_DIR}"

